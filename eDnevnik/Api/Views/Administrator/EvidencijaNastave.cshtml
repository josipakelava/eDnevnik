@model Api.Models.EvidencijaViewModel
@{
    ViewBag.Title = "DodajEvidenciju";
}

@Html.Partial("_AdminNavPartial")

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="registerContainer">

    <h2 class="loginSubtitle" style="color: orange">Dodaj novi Razred</h2>

    @using (Html.BeginForm("NovaEvidencija", "Administrator", FormMethod.Post, new { name = "formAnswerScheme", id = "form" }))
    {
        @Html.DropDownListFor(m => m.idRazred, new SelectList(ViewBag.razred, "idRazred", "naziv"), "Razred", new { Class = "form-control", Name = "idRazred", Id = "razred" })
        @Html.ValidationMessageFor(m => m.idRazred, "", new { @class = "text-danger" })

        <br />
        <div style="display: none " id="unos">
            @Html.DropDownListFor(m => m.idPredmet, new SelectList(ViewBag.predmet, "idPredmet", "naziv"), "Predmet", new { Class = "form-control", Name = "idPredmet", Id = "predmet" })
            @Html.ValidationMessageFor(m => m.idPredmet, "", new { @class = "text-danger" })

            @Html.DropDownListFor(m => m.idProfesor, new SelectList(ViewBag.profesori, "idOsoba", "oibPrezimeIme"), "Profesor", new { Class = "form-control", Name = "idOsoba", Id = "osoba" })
            @Html.ValidationMessageFor(m => m.idProfesor, "", new { @class = "text-danger" })
        </div>

        <input class="formButton" type="submit" value="Dodaj" />
    }


</div>

@section Scripts
{
    <script type="text/javascript">
     $(function() {
         $("#razred").change(function () {
                var selectedItem = $(this).val();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("PromijeniRazred", "Administrator"))",
                    data: { "id": selectedItem},
                    success: function (data) {

                        data = JSON.parse(data);
                        console.log(data);

                        $("#osoba").empty();
                        e = new Option("Profesor", '');
                        $('#osoba').append(e);

                        for (var i in data.profesori) {
                            e = new Option(data.profesori[i].oibPrezimeIme, data.profesori[i].idOsoba);
                            $('#osoba').append(e);
                        }


                        $("#predmet").empty();
                        e = new Option("Predmet", '');
                        $('#predmet').append(e);

                        for (var i in data.predmeti) {
                            console.log(data.predmeti[i].naziv)
                            e = new Option(data.predmeti[i].naziv, data.predmeti[i].idPredmet);
                            $('#predmet').append(e);
                        }

                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert('Failed to retrieve states.');

                    }
                });
                var filter = "#unos";
                var element = document.querySelectorAll(filter)[0];
                element.style.display = null;
            });

        });
    </script>
}

